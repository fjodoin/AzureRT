{"ast":null,"code":"var _s = $RefreshSig$();\nimport Reach, { useEffect, useRef } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport circularLayout from 'graphology-layout/circular';\nconst GraphWrapper = () => {\n  _s();\n  const sigma = useSigma();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph();\n    graph.addNode(\"1\", {\n      label: \"Node 1\",\n      x: 0,\n      y: 0,\n      size: 10,\n      color: \"blue\"\n    });\n    graph.addNode(\"2\", {\n      label: \"Node 2\",\n      x: 1,\n      y: 1,\n      size: 20,\n      color: \"red\"\n    });\n    graph.addNode(\"3\", {\n      label: \"Node 3\",\n      x: 2,\n      y: 2,\n      size: 30,\n      color: \"green\"\n    });\n    circularLayout.assign(graph);\n  }, sigma.graph.read(graph));\n};\n_s(GraphWrapper, \"R0bJCO5eGdK7ZLFJaGp7Ix0qrBw=\", false, function () {\n  return [useSigma];\n});\n_c = GraphWrapper;\nvar _c;\n$RefreshReg$(_c, \"GraphWrapper\");","map":{"version":3,"names":["Reach","useEffect","useRef","SigmaContainer","useSigma","Graph","circularLayout","GraphWrapper","_s","sigma","containerRef","graph","addNode","label","x","y","size","color","assign","read","_c","$RefreshReg$"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx"],"sourcesContent":["import Reach, { useEffect, useRef } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport circularLayout from 'graphology-layout/circular';\n\nconst GraphWrapper = () => {\n    const sigma = useSigma();\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        const graph = new Graph();\n        graph.addNode(\"1\", { label: \"Node 1\", x: 0, y: 0, size: 10, color: \"blue\" });\n        graph.addNode(\"2\", { label: \"Node 2\", x: 1, y: 1, size: 20, color: \"red\" });\n        graph.addNode(\"3\", { label: \"Node 3\", x: 2, y: 2, size: 30, color: \"green\" });\n    circularLayout.assign(graph);\n    },\n    sigma.graph.read(graph));\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,cAAc,EAAEC,QAAQ,QAAQ,mBAAmB;AAC5D,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,cAAc,MAAM,4BAA4B;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;EACxB,MAAMM,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,MAAMU,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;IACzBM,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC;IAC5EN,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC;IAC3EN,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;IACjFX,cAAc,CAACY,MAAM,CAACP,KAAK,CAAC;EAC5B,CAAC,EACDF,KAAK,CAACE,KAAK,CAACQ,IAAI,CAACR,KAAK,CAAC,CAAC;AAC5B,CAAC;AAAAH,EAAA,CAZKD,YAAY;EAAA,QACAH,QAAQ;AAAA;AAAAgB,EAAA,GADpBb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
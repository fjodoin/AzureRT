{"ast":null,"code":"var _jsxFileName = \"/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport circularLayout from 'graphology-layout/circular';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = ({\n  searchQuery,\n  selectedCategory\n}) => {\n  _s();\n  const sigma = useSigma();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph();\n\n    // Add nodes with music type as an attribute\n    graph.addNode('n1', {\n      label: 'Ella Fitzgerald: 1917',\n      size: 25,\n      color: 'red',\n      musicType: 'jazz',\n      x: 0,\n      y: 0\n    });\n    graph.addNode('n2', {\n      label: 'Frank Sinatra: 1915',\n      size: 25,\n      color: 'red',\n      musicType: 'swing',\n      x: 1,\n      y: 1\n    });\n    graph.addNode('n3', {\n      label: 'Billie Holiday: 1915',\n      size: 25,\n      color: 'red',\n      musicType: 'jazz',\n      x: 2,\n      y: 2\n    });\n    graph.addNode('n4', {\n      label: 'Louis Armstrong: 1901',\n      size: 25,\n      color: 'yellow',\n      musicType: 'jazz',\n      x: -1,\n      y: -1\n    });\n    graph.addNode('n5', {\n      label: 'Nina Simone: 1933',\n      size: 25,\n      color: 'orange',\n      musicType: 'soul',\n      x: -2,\n      y: 2\n    });\n    graph.addNode('n6', {\n      label: 'Nat King Cole: 1919',\n      size: 25,\n      color: 'red',\n      musicType: 'jazz',\n      x: 3,\n      y: -2\n    });\n    graph.addNode('n7', {\n      label: 'Gregory Porter: 1971',\n      size: 25,\n      color: 'teal',\n      musicType: 'soul',\n      x: -3,\n      y: 3\n    });\n    graph.addNode('n8', {\n      label: 'Sarah Vaughan: 1924',\n      size: 25,\n      color: 'orange',\n      musicType: 'jazz',\n      x: 4,\n      y: -3\n    });\n    graph.addNode('n9', {\n      label: 'Michael Bublé: 1975',\n      size: 25,\n      color: 'teal',\n      musicType: 'pop',\n      x: -4,\n      y: 4\n    });\n\n    // Add edges with \"Older Than\" relationship\n    graph.addEdge('n1', 'n2', {\n      label: 'Older Than',\n      color: '#888'\n    });\n    graph.addEdge('n1', 'n3', {\n      label: 'Older Than',\n      color: '#888'\n    });\n    graph.addEdge('n1', 'n6', {\n      label: 'Older Than',\n      color: '#888'\n    });\n    graph.addEdge('n5', 'n8', {\n      label: 'Older Than',\n      color: '#888'\n    });\n    graph.addEdge('n7', 'n9', {\n      label: 'Older Than',\n      color: '#888'\n    });\n\n    // Apply a circular layout\n    circularLayout.assign(graph);\n    if (sigma) {\n      sigma.setGraph(graph);\n      sigma.refresh();\n    }\n\n    // Save the graph in Sigma for filtering later\n    sigma.setGraph(graph);\n\n    // Add event listeners for node dragging\n    let draggedNode = null;\n    const handleMouseDown = event => {\n      if (event.node) {\n        draggedNode = event.node;\n      }\n    };\n    const handleMouseMove = event => {\n      if (draggedNode) {\n        const {\n          camera\n        } = sigma.getRenderer();\n        const newX = camera.x + event.event.layerX / camera.ratio;\n        const newY = camera.y + event.event.layerY / camera.ratio;\n        graph.setNodeAttribute(draggedNode, 'x', newX);\n        graph.setNodeAttribute(draggedNode, 'y', newY);\n        sigma.refresh();\n      }\n    };\n    const handleMouseUp = () => {\n      draggedNode = null;\n    };\n    sigma.on('downNode', handleMouseDown);\n    sigma.getRenderer().getCanvas().addEventListener('mousemove', handleMouseMove);\n    sigma.getRenderer().getCanvas().addEventListener('mouseup', handleMouseUp);\n    return () => {\n      sigma.off('downNode', handleMouseDown);\n      sigma.getRenderer().getCanvas().removeEventListener('mousemove', handleMouseMove);\n      sigma.getRenderer().getCanvas().removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [sigma]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n_s(GraphComponent, \"R0bJCO5eGdK7ZLFJaGp7Ix0qrBw=\", false, function () {\n  return [useSigma];\n});\n_c = GraphComponent;\nconst GraphWrapper = ({\n  searchQuery,\n  selectedCategory\n}) => /*#__PURE__*/_jsxDEV(SigmaContainer, {\n  settings: {\n    renderEdgeLabels: true,\n    defaultEdgeLabelSize: 14\n  },\n  children: /*#__PURE__*/_jsxDEV(GraphComponent, {\n    searchQuery: searchQuery,\n    selectedCategory: selectedCategory\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this);\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","SigmaContainer","useSigma","Graph","circularLayout","jsxDEV","_jsxDEV","GraphComponent","searchQuery","selectedCategory","_s","sigma","containerRef","graph","addNode","label","size","color","musicType","x","y","addEdge","assign","setGraph","refresh","draggedNode","handleMouseDown","event","node","handleMouseMove","camera","getRenderer","newX","layerX","ratio","newY","layerY","setNodeAttribute","handleMouseUp","on","getCanvas","addEventListener","off","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","GraphWrapper","settings","renderEdgeLabels","defaultEdgeLabelSize","children","_c2","$RefreshReg$"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { SigmaContainer, useSigma } from '@react-sigma/core';\nimport Graph from 'graphology';\nimport circularLayout from 'graphology-layout/circular';\n\nconst GraphComponent = ({ searchQuery, selectedCategory }) => {\n  const sigma = useSigma();\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const graph = new Graph();\n\n    // Add nodes with music type as an attribute\n    graph.addNode('n1', { label: 'Ella Fitzgerald: 1917', size: 25, color: 'red', musicType: 'jazz', x: 0, y: 0 });\n    graph.addNode('n2', { label: 'Frank Sinatra: 1915', size: 25, color: 'red', musicType: 'swing', x: 1, y: 1 });\n    graph.addNode('n3', { label: 'Billie Holiday: 1915', size: 25, color: 'red', musicType: 'jazz', x: 2, y: 2 });\n    graph.addNode('n4', { label: 'Louis Armstrong: 1901', size: 25, color: 'yellow', musicType: 'jazz', x: -1, y: -1 });\n    graph.addNode('n5', { label: 'Nina Simone: 1933', size: 25, color: 'orange', musicType: 'soul', x: -2, y: 2 });\n    graph.addNode('n6', { label: 'Nat King Cole: 1919', size: 25, color: 'red', musicType: 'jazz', x: 3, y: -2 });\n    graph.addNode('n7', { label: 'Gregory Porter: 1971', size: 25, color: 'teal', musicType: 'soul', x: -3, y: 3 });\n    graph.addNode('n8', { label: 'Sarah Vaughan: 1924', size: 25, color: 'orange', musicType: 'jazz', x: 4, y: -3 });\n    graph.addNode('n9', { label: 'Michael Bublé: 1975', size: 25, color: 'teal', musicType: 'pop', x: -4, y: 4 });\n\n    // Add edges with \"Older Than\" relationship\n    graph.addEdge('n1', 'n2', { label: 'Older Than', color: '#888' });\n    graph.addEdge('n1', 'n3', { label: 'Older Than', color: '#888' });\n    graph.addEdge('n1', 'n6', { label: 'Older Than', color: '#888' });\n    graph.addEdge('n5', 'n8', { label: 'Older Than', color: '#888' });\n    graph.addEdge('n7', 'n9', { label: 'Older Than', color: '#888' });\n\n    // Apply a circular layout\n    circularLayout.assign(graph);\n\n    if (sigma) {\n      sigma.setGraph(graph);\n      sigma.refresh();\n    }\n\n    // Save the graph in Sigma for filtering later\n    sigma.setGraph(graph);\n\n    // Add event listeners for node dragging\n    let draggedNode = null;\n\n    const handleMouseDown = (event) => {\n      if (event.node) {\n        draggedNode = event.node;\n      }\n    };\n\n    const handleMouseMove = (event) => {\n      if (draggedNode) {\n        const { camera } = sigma.getRenderer();\n        const newX = camera.x + event.event.layerX / camera.ratio;\n        const newY = camera.y + event.event.layerY / camera.ratio;\n\n        graph.setNodeAttribute(draggedNode, 'x', newX);\n        graph.setNodeAttribute(draggedNode, 'y', newY);\n\n        sigma.refresh();\n      }\n    };\n\n    const handleMouseUp = () => {\n      draggedNode = null;\n    };\n\n    sigma.on('downNode', handleMouseDown);\n    sigma.getRenderer().getCanvas().addEventListener('mousemove', handleMouseMove);\n    sigma.getRenderer().getCanvas().addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      sigma.off('downNode', handleMouseDown);\n      sigma.getRenderer().getCanvas().removeEventListener('mousemove', handleMouseMove);\n      sigma.getRenderer().getCanvas().removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [sigma]);\n\n  return <div ref={containerRef} />;\n};\n\nconst GraphWrapper = ({ searchQuery, selectedCategory }) => (\n  <SigmaContainer settings={{ renderEdgeLabels: true, defaultEdgeLabelSize: 14 }}>\n    <GraphComponent searchQuery={searchQuery} selectedCategory={selectedCategory} />\n  </SigmaContainer>\n);\n\nexport default GraphWrapper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
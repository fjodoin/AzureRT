{"ast":null,"code":"/**\n * Graphology Force Layout Worker\n * ===============================\n *\n * A worker made for running a force layout live.\n *\n * Note that it does not run in a webworker yet but respect animation frames.\n */\nconst isGraph = require('graphology-utils/is-graph');\nconst resolveDefaults = require('graphology-utils/defaults');\nconst iterate = require('./iterate.js');\nconst helpers = require('./helpers.js');\nconst DEFAULTS = require('./defaults.js');\nfunction ForceSupervisor(graph, params) {\n  // Validation\n  if (!isGraph(graph)) throw new Error('graphology-layout-force/worker: the given graph is not a valid graphology instance.');\n  params = resolveDefaults(params, DEFAULTS);\n  this.callbacks = {};\n  if (params.onConverged) this.callbacks.onConverged = params.onConverged;\n  this.graph = graph;\n  this.params = params;\n  this.nodeStates = {};\n  this.frameID = null;\n  this.running = false;\n  this.killed = false;\n\n  // TODO: hook listeners on graph to listen to dropNode, dropEdge, clear, clearEdges\n}\nForceSupervisor.prototype.isRunning = function () {\n  return this.running;\n};\nForceSupervisor.prototype.runFrame = function () {\n  let {\n    converged\n  } = iterate(this.graph, this.nodeStates, this.params);\n  helpers.assignLayoutChanges(this.graph, this.nodeStates, this.params);\n\n  // TODO: figure out convergence\n  converged = false;\n  if (converged) {\n    if (this.callbacks.onConverged) this.callbacks.onConverged();\n    this.stop();\n  } else {\n    this.frameID = window.requestAnimationFrame(() => this.runFrame());\n  }\n};\nForceSupervisor.prototype.stop = function () {\n  this.running = false;\n  if (this.frameID !== null) {\n    window.cancelAnimationFrame(this.frameID);\n    this.frameID = null;\n  }\n  return this;\n};\nForceSupervisor.prototype.start = function () {\n  if (this.killed) throw new Error('graphology-layout-force/worker.start: layout was killed.');\n  if (this.running) return;\n  this.running = true;\n  this.runFrame();\n};\nForceSupervisor.prototype.kill = function () {\n  this.stop();\n  delete this.nodeStates;\n  this.killed = true;\n\n  // TODO: cleanup events\n};\nmodule.exports = ForceSupervisor;","map":{"version":3,"names":["isGraph","require","resolveDefaults","iterate","helpers","DEFAULTS","ForceSupervisor","graph","params","Error","callbacks","onConverged","nodeStates","frameID","running","killed","prototype","isRunning","runFrame","converged","assignLayoutChanges","stop","window","requestAnimationFrame","cancelAnimationFrame","start","kill","module","exports"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/node_modules/graphology-layout-force/worker.js"],"sourcesContent":["/**\n * Graphology Force Layout Worker\n * ===============================\n *\n * A worker made for running a force layout live.\n *\n * Note that it does not run in a webworker yet but respect animation frames.\n */\nconst isGraph = require('graphology-utils/is-graph');\nconst resolveDefaults = require('graphology-utils/defaults');\n\nconst iterate = require('./iterate.js');\nconst helpers = require('./helpers.js');\nconst DEFAULTS = require('./defaults.js');\n\nfunction ForceSupervisor(graph, params) {\n  // Validation\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-force/worker: the given graph is not a valid graphology instance.'\n    );\n\n  params = resolveDefaults(params, DEFAULTS);\n\n  this.callbacks = {};\n\n  if (params.onConverged) this.callbacks.onConverged = params.onConverged;\n\n  this.graph = graph;\n  this.params = params;\n  this.nodeStates = {};\n  this.frameID = null;\n  this.running = false;\n  this.killed = false;\n\n  // TODO: hook listeners on graph to listen to dropNode, dropEdge, clear, clearEdges\n}\n\nForceSupervisor.prototype.isRunning = function () {\n  return this.running;\n};\n\nForceSupervisor.prototype.runFrame = function () {\n  let {converged} = iterate(this.graph, this.nodeStates, this.params);\n\n  helpers.assignLayoutChanges(this.graph, this.nodeStates, this.params);\n\n  // TODO: figure out convergence\n  converged = false;\n\n  if (converged) {\n    if (this.callbacks.onConverged) this.callbacks.onConverged();\n    this.stop();\n  } else {\n    this.frameID = window.requestAnimationFrame(() => this.runFrame());\n  }\n};\n\nForceSupervisor.prototype.stop = function () {\n  this.running = false;\n\n  if (this.frameID !== null) {\n    window.cancelAnimationFrame(this.frameID);\n    this.frameID = null;\n  }\n\n  return this;\n};\n\nForceSupervisor.prototype.start = function () {\n  if (this.killed)\n    throw new Error('graphology-layout-force/worker.start: layout was killed.');\n\n  if (this.running) return;\n\n  this.running = true;\n  this.runFrame();\n};\n\nForceSupervisor.prototype.kill = function () {\n  this.stop();\n  delete this.nodeStates;\n  this.killed = true;\n\n  // TODO: cleanup events\n};\n\nmodule.exports = ForceSupervisor;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACpD,MAAMC,eAAe,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAE5D,MAAME,OAAO,GAAGF,OAAO,CAAC,cAAc,CAAC;AACvC,MAAMG,OAAO,GAAGH,OAAO,CAAC,cAAc,CAAC;AACvC,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,eAAe,CAAC;AAEzC,SAASK,eAAeA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACtC;EACA,IAAI,CAACR,OAAO,CAACO,KAAK,CAAC,EACjB,MAAM,IAAIE,KAAK,CACb,qFACF,CAAC;EAEHD,MAAM,GAAGN,eAAe,CAACM,MAAM,EAAEH,QAAQ,CAAC;EAE1C,IAAI,CAACK,SAAS,GAAG,CAAC,CAAC;EAEnB,IAAIF,MAAM,CAACG,WAAW,EAAE,IAAI,CAACD,SAAS,CAACC,WAAW,GAAGH,MAAM,CAACG,WAAW;EAEvE,IAAI,CAACJ,KAAK,GAAGA,KAAK;EAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACI,UAAU,GAAG,CAAC,CAAC;EACpB,IAAI,CAACC,OAAO,GAAG,IAAI;EACnB,IAAI,CAACC,OAAO,GAAG,KAAK;EACpB,IAAI,CAACC,MAAM,GAAG,KAAK;;EAEnB;AACF;AAEAT,eAAe,CAACU,SAAS,CAACC,SAAS,GAAG,YAAY;EAChD,OAAO,IAAI,CAACH,OAAO;AACrB,CAAC;AAEDR,eAAe,CAACU,SAAS,CAACE,QAAQ,GAAG,YAAY;EAC/C,IAAI;IAACC;EAAS,CAAC,GAAGhB,OAAO,CAAC,IAAI,CAACI,KAAK,EAAE,IAAI,CAACK,UAAU,EAAE,IAAI,CAACJ,MAAM,CAAC;EAEnEJ,OAAO,CAACgB,mBAAmB,CAAC,IAAI,CAACb,KAAK,EAAE,IAAI,CAACK,UAAU,EAAE,IAAI,CAACJ,MAAM,CAAC;;EAErE;EACAW,SAAS,GAAG,KAAK;EAEjB,IAAIA,SAAS,EAAE;IACb,IAAI,IAAI,CAACT,SAAS,CAACC,WAAW,EAAE,IAAI,CAACD,SAAS,CAACC,WAAW,CAAC,CAAC;IAC5D,IAAI,CAACU,IAAI,CAAC,CAAC;EACb,CAAC,MAAM;IACL,IAAI,CAACR,OAAO,GAAGS,MAAM,CAACC,qBAAqB,CAAC,MAAM,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC;EACpE;AACF,CAAC;AAEDZ,eAAe,CAACU,SAAS,CAACK,IAAI,GAAG,YAAY;EAC3C,IAAI,CAACP,OAAO,GAAG,KAAK;EAEpB,IAAI,IAAI,CAACD,OAAO,KAAK,IAAI,EAAE;IACzBS,MAAM,CAACE,oBAAoB,CAAC,IAAI,CAACX,OAAO,CAAC;IACzC,IAAI,CAACA,OAAO,GAAG,IAAI;EACrB;EAEA,OAAO,IAAI;AACb,CAAC;AAEDP,eAAe,CAACU,SAAS,CAACS,KAAK,GAAG,YAAY;EAC5C,IAAI,IAAI,CAACV,MAAM,EACb,MAAM,IAAIN,KAAK,CAAC,0DAA0D,CAAC;EAE7E,IAAI,IAAI,CAACK,OAAO,EAAE;EAElB,IAAI,CAACA,OAAO,GAAG,IAAI;EACnB,IAAI,CAACI,QAAQ,CAAC,CAAC;AACjB,CAAC;AAEDZ,eAAe,CAACU,SAAS,CAACU,IAAI,GAAG,YAAY;EAC3C,IAAI,CAACL,IAAI,CAAC,CAAC;EACX,OAAO,IAAI,CAACT,UAAU;EACtB,IAAI,CAACG,MAAM,GAAG,IAAI;;EAElB;AACF,CAAC;AAEDY,MAAM,CAACC,OAAO,GAAGtB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Graph from \"graphology\";\nimport { createNodeImageProgram } from \"@sigma/node-image\";\nimport Sigma from \"sigma\";\nimport ForceSupervisor from \"graphology-layout-force/worker\";\nimport graphData from \"./data/graphData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = ({\n  searchQuery,\n  selectedCategory\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const graph = new Graph();\n\n    // Load nodes and edges from graphData.json\n    const {\n      nodes,\n      edges\n    } = graphData;\n    nodes.forEach(node => {\n      graph.addNode(node.id, {\n        ...node,\n        // Spread existing attributes from the JSON\n        type: \"image\" // Ensure the \"type\" is set to \"image\" for custom rendering\n      });\n    });\n    edges.forEach(edge => {\n      graph.addEdge(edge.source, edge.target, {\n        ...edge\n      });\n    });\n    if (containerRef.current) {\n      const renderer = new Sigma(graph, containerRef.current, {\n        nodeProgramClasses: {\n          image: createNodeImageProgram()\n        },\n        renderEdgeLabels: true\n      });\n      const layout = new ForceSupervisor(graph);\n      layout.start();\n      return () => {\n        layout.kill();\n        renderer.kill();\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n_s(GraphComponent, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = GraphComponent;\nconst GraphWrapper = ({\n  searchQuery,\n  selectedCategory\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    width: \"800px\",\n    height: \"600px\"\n  },\n  children: /*#__PURE__*/_jsxDEV(GraphComponent, {\n    searchQuery: searchQuery,\n    selectedCategory: selectedCategory\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","Graph","createNodeImageProgram","Sigma","ForceSupervisor","graphData","jsxDEV","_jsxDEV","GraphComponent","searchQuery","selectedCategory","_s","containerRef","graph","nodes","edges","forEach","node","addNode","id","type","edge","addEdge","source","target","current","renderer","nodeProgramClasses","image","renderEdgeLabels","layout","start","kill","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","GraphWrapper","children","_c2","$RefreshReg$"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Graph from \"graphology\";\nimport { createNodeImageProgram } from \"@sigma/node-image\";\nimport Sigma from \"sigma\";\nimport ForceSupervisor from \"graphology-layout-force/worker\";\nimport graphData from \"./data/graphData.json\";\n\nconst GraphComponent = ({ searchQuery, selectedCategory }) => {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const graph = new Graph();\n\n    // Load nodes and edges from graphData.json\n    const { nodes, edges } = graphData;\n\n    nodes.forEach((node) => {\n      graph.addNode(node.id, {\n        ...node, // Spread existing attributes from the JSON\n        type: \"image\", // Ensure the \"type\" is set to \"image\" for custom rendering\n      });\n    });\n\n    edges.forEach((edge) => {\n      graph.addEdge(edge.source, edge.target, {\n        ...edge,\n      });\n    });\n\n    if (containerRef.current) {\n      const renderer = new Sigma(graph, containerRef.current, {\n        nodeProgramClasses: {\n          image: createNodeImageProgram(),\n        },\n        renderEdgeLabels: true,\n      });\n\n      const layout = new ForceSupervisor(graph);\n      layout.start();\n\n      return () => {\n        layout.kill();\n        renderer.kill();\n      };\n    }\n  }, []);\n\n  return <div ref={containerRef} style={{ width: \"100%\", height: \"100%\" }} />;\n};\n\nconst GraphWrapper = ({ searchQuery, selectedCategory }) => (\n  <div style={{ width: \"800px\", height: \"600px\" }}>\n    <GraphComponent searchQuery={searchQuery} selectedCategory={selectedCategory} />\n  </div>\n);\n\nexport default GraphWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,YAAY;AAC9B,SAASC,sBAAsB,QAAQ,mBAAmB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAMC,YAAY,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAG,IAAIZ,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAM;MAAEa,KAAK;MAAEC;IAAM,CAAC,GAAGV,SAAS;IAElCS,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAK;MACtBJ,KAAK,CAACK,OAAO,CAACD,IAAI,CAACE,EAAE,EAAE;QACrB,GAAGF,IAAI;QAAE;QACTG,IAAI,EAAE,OAAO,CAAE;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFL,KAAK,CAACC,OAAO,CAAEK,IAAI,IAAK;MACtBR,KAAK,CAACS,OAAO,CAACD,IAAI,CAACE,MAAM,EAAEF,IAAI,CAACG,MAAM,EAAE;QACtC,GAAGH;MACL,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAIT,YAAY,CAACa,OAAO,EAAE;MACxB,MAAMC,QAAQ,GAAG,IAAIvB,KAAK,CAACU,KAAK,EAAED,YAAY,CAACa,OAAO,EAAE;QACtDE,kBAAkB,EAAE;UAClBC,KAAK,EAAE1B,sBAAsB,CAAC;QAChC,CAAC;QACD2B,gBAAgB,EAAE;MACpB,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAG,IAAI1B,eAAe,CAACS,KAAK,CAAC;MACzCiB,MAAM,CAACC,KAAK,CAAC,CAAC;MAEd,OAAO,MAAM;QACXD,MAAM,CAACE,IAAI,CAAC,CAAC;QACbN,QAAQ,CAACM,IAAI,CAAC,CAAC;MACjB,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOzB,OAAA;IAAK0B,GAAG,EAAErB,YAAa;IAACsB,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7E,CAAC;AAAC7B,EAAA,CAzCIH,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA2CpB,MAAMkC,YAAY,GAAGA,CAAC;EAAEjC,WAAW;EAAEC;AAAiB,CAAC,kBACrDH,OAAA;EAAK2B,KAAK,EAAE;IAAEC,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAQ,CAAE;EAAAO,QAAA,eAC9CpC,OAAA,CAACC,cAAc;IAACC,WAAW,EAAEA,WAAY;IAACC,gBAAgB,EAAEA;EAAiB;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC7E,CACN;AAACI,GAAA,GAJIF,YAAY;AAMlB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
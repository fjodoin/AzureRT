{"ast":null,"code":"var _jsxFileName = \"/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { SigmaContainer, useRegisterEvents } from \"@react-sigma/core\";\nimport Graph from \"graphology\";\nimport circularLayout from \"graphology-layout/circular\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphWrapper = () => {\n  _s();\n  const graph = new Graph();\n  useEffect(() => {\n    // Add nodes and edges\n    graph.addNode(\"1\", {\n      label: \"Node 1\",\n      size: 10,\n      color: \"blue\"\n    });\n    graph.addNode(\"2\", {\n      label: \"Node 2\",\n      size: 20,\n      color: \"red\"\n    });\n    graph.addNode(\"3\", {\n      label: \"Node 3\",\n      size: 30,\n      color: \"green\"\n    });\n    graph.addEdge(\"1\", \"2\", {\n      label: \"Edge 1-2\",\n      color: \"gray\"\n    });\n    graph.addEdge(\"2\", \"3\", {\n      label: \"Edge 2-3\",\n      color: \"gray\"\n    });\n\n    // Apply circular layout\n    circularLayout.assign(graph);\n  }, []);\n\n  // Optional: Register events if needed\n  const registerEvents = useRegisterEvents();\n  useEffect(() => {\n    registerEvents({\n      clickNode: event => {\n        console.log(\"Node clicked:\", event.node);\n      }\n    });\n  }, [registerEvents]);\n  return /*#__PURE__*/_jsxDEV(SigmaContainer, {\n    graph: graph // Pass the graph to SigmaContainer\n    ,\n    style: {\n      height: \"80vh\",\n      width: \"80%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphWrapper, \"adEj1ISGCnPQLwcfUUmT1a9KS+s=\", false, function () {\n  return [useRegisterEvents];\n});\n_c = GraphWrapper;\nexport default GraphWrapper;\nvar _c;\n$RefreshReg$(_c, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","SigmaContainer","useRegisterEvents","Graph","circularLayout","jsxDEV","_jsxDEV","GraphWrapper","_s","graph","addNode","label","size","color","addEdge","assign","registerEvents","clickNode","event","console","log","node","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { SigmaContainer, useRegisterEvents } from \"@react-sigma/core\";\nimport Graph from \"graphology\";\nimport circularLayout from \"graphology-layout/circular\";\n\nconst GraphWrapper = () => {\n  const graph = new Graph();\n\n  useEffect(() => {\n    // Add nodes and edges\n    graph.addNode(\"1\", { label: \"Node 1\", size: 10, color: \"blue\" });\n    graph.addNode(\"2\", { label: \"Node 2\", size: 20, color: \"red\" });\n    graph.addNode(\"3\", { label: \"Node 3\", size: 30, color: \"green\" });\n    graph.addEdge(\"1\", \"2\", { label: \"Edge 1-2\", color: \"gray\" });\n    graph.addEdge(\"2\", \"3\", { label: \"Edge 2-3\", color: \"gray\" });\n\n    // Apply circular layout\n    circularLayout.assign(graph);\n  }, []);\n\n  // Optional: Register events if needed\n  const registerEvents = useRegisterEvents();\n  useEffect(() => {\n    registerEvents({\n      clickNode: (event) => {\n        console.log(\"Node clicked:\", event.node);\n      },\n    });\n  }, [registerEvents]);\n\n  return (\n    <SigmaContainer\n      graph={graph} // Pass the graph to SigmaContainer\n      style={{ height: \"80vh\", width: \"80%\" }}\n    >\n      {/* Sigma will automatically render the graph */}\n    </SigmaContainer>\n  );\n};\n\nexport default GraphWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,mBAAmB;AACrE,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;EAEzBH,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC;IAChEJ,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC;IAC/DJ,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;IACjEJ,KAAK,CAACK,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;MAAEH,KAAK,EAAE,UAAU;MAAEE,KAAK,EAAE;IAAO,CAAC,CAAC;IAC7DJ,KAAK,CAACK,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;MAAEH,KAAK,EAAE,UAAU;MAAEE,KAAK,EAAE;IAAO,CAAC,CAAC;;IAE7D;IACAT,cAAc,CAACW,MAAM,CAACN,KAAK,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,cAAc,GAAGd,iBAAiB,CAAC,CAAC;EAC1CF,SAAS,CAAC,MAAM;IACdgB,cAAc,CAAC;MACbC,SAAS,EAAGC,KAAK,IAAK;QACpBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAACG,IAAI,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACL,cAAc,CAAC,CAAC;EAEpB,oBACEV,OAAA,CAACL,cAAc;IACbQ,KAAK,EAAEA,KAAM,CAAC;IAAA;IACda,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1B,CAAC;AAErB,CAAC;AAACpB,EAAA,CAjCID,YAAY;EAAA,QAgBOL,iBAAiB;AAAA;AAAA2B,EAAA,GAhBpCtB,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
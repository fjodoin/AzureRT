{"ast":null,"code":"/**\n * Graphology Circular Layout\n * ===========================\n *\n * Layout arranging the nodes in a circle.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {object}     [attributes] - Attributes names to map.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericCircularLayout(assign, graph, options) {\n  if (!isGraph(graph)) throw new Error('graphology-layout/random: the given graph is not a valid graphology instance.');\n  options = resolveDefaults(options, DEFAULTS);\n  var dimensions = options.dimensions;\n  if (!Array.isArray(dimensions) || dimensions.length !== 2) throw new Error('graphology-layout/random: given dimensions are invalid.');\n  var center = options.center;\n  var scale = options.scale;\n  var tau = Math.PI * 2;\n  var offset = (center - 0.5) * scale;\n  var l = graph.order;\n  var x = dimensions[0];\n  var y = dimensions[1];\n  function assignPosition(i, target) {\n    target[x] = scale * Math.cos(i * tau / l) + offset;\n    target[y] = scale * Math.sin(i * tau / l) + offset;\n    return target;\n  }\n  var i = 0;\n  if (!assign) {\n    var positions = {};\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition(i++, {});\n    });\n    return positions;\n  }\n  graph.updateEachNodeAttributes(function (_, attr) {\n    assignPosition(i++, attr);\n    return attr;\n  }, {\n    attributes: dimensions\n  });\n}\nvar circularLayout = genericCircularLayout.bind(null, false);\ncircularLayout.assign = genericCircularLayout.bind(null, true);\nmodule.exports = circularLayout;","map":{"version":3,"names":["resolveDefaults","require","isGraph","DEFAULTS","dimensions","center","scale","genericCircularLayout","assign","graph","options","Error","Array","isArray","length","tau","Math","PI","offset","l","order","x","y","assignPosition","i","target","cos","sin","positions","forEachNode","node","updateEachNodeAttributes","_","attr","attributes","circularLayout","bind","module","exports"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/node_modules/graphology-layout/circular.js"],"sourcesContent":["/**\n * Graphology Circular Layout\n * ===========================\n *\n * Layout arranging the nodes in a circle.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {object}     [attributes] - Attributes names to map.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericCircularLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/random: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length !== 2)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  var center = options.center;\n  var scale = options.scale;\n  var tau = Math.PI * 2;\n\n  var offset = (center - 0.5) * scale;\n  var l = graph.order;\n\n  var x = dimensions[0];\n  var y = dimensions[1];\n\n  function assignPosition(i, target) {\n    target[x] = scale * Math.cos((i * tau) / l) + offset;\n    target[y] = scale * Math.sin((i * tau) / l) + offset;\n\n    return target;\n  }\n\n  var i = 0;\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition(i++, {});\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(i++, attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar circularLayout = genericCircularLayout.bind(null, false);\ncircularLayout.assign = genericCircularLayout.bind(null, true);\n\nmodule.exports = circularLayout;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAe,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAC1D,IAAIC,OAAO,GAAGD,OAAO,CAAC,2BAA2B,CAAC;;AAElD;AACA;AACA;AACA,IAAIE,QAAQ,GAAG;EACbC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACtBC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAE;EACrD,IAAI,CAACR,OAAO,CAACO,KAAK,CAAC,EACjB,MAAM,IAAIE,KAAK,CACb,+EACF,CAAC;EAEHD,OAAO,GAAGV,eAAe,CAACU,OAAO,EAAEP,QAAQ,CAAC;EAE5C,IAAIC,UAAU,GAAGM,OAAO,CAACN,UAAU;EAEnC,IAAI,CAACQ,KAAK,CAACC,OAAO,CAACT,UAAU,CAAC,IAAIA,UAAU,CAACU,MAAM,KAAK,CAAC,EACvD,MAAM,IAAIH,KAAK,CAAC,yDAAyD,CAAC;EAE5E,IAAIN,MAAM,GAAGK,OAAO,CAACL,MAAM;EAC3B,IAAIC,KAAK,GAAGI,OAAO,CAACJ,KAAK;EACzB,IAAIS,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;EAErB,IAAIC,MAAM,GAAG,CAACb,MAAM,GAAG,GAAG,IAAIC,KAAK;EACnC,IAAIa,CAAC,GAAGV,KAAK,CAACW,KAAK;EAEnB,IAAIC,CAAC,GAAGjB,UAAU,CAAC,CAAC,CAAC;EACrB,IAAIkB,CAAC,GAAGlB,UAAU,CAAC,CAAC,CAAC;EAErB,SAASmB,cAAcA,CAACC,CAAC,EAAEC,MAAM,EAAE;IACjCA,MAAM,CAACJ,CAAC,CAAC,GAAGf,KAAK,GAAGU,IAAI,CAACU,GAAG,CAAEF,CAAC,GAAGT,GAAG,GAAII,CAAC,CAAC,GAAGD,MAAM;IACpDO,MAAM,CAACH,CAAC,CAAC,GAAGhB,KAAK,GAAGU,IAAI,CAACW,GAAG,CAAEH,CAAC,GAAGT,GAAG,GAAII,CAAC,CAAC,GAAGD,MAAM;IAEpD,OAAOO,MAAM;EACf;EAEA,IAAID,CAAC,GAAG,CAAC;EAET,IAAI,CAAChB,MAAM,EAAE;IACX,IAAIoB,SAAS,GAAG,CAAC,CAAC;IAElBnB,KAAK,CAACoB,WAAW,CAAC,UAAUC,IAAI,EAAE;MAChCF,SAAS,CAACE,IAAI,CAAC,GAAGP,cAAc,CAACC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC;IAEF,OAAOI,SAAS;EAClB;EAEAnB,KAAK,CAACsB,wBAAwB,CAC5B,UAAUC,CAAC,EAAEC,IAAI,EAAE;IACjBV,cAAc,CAACC,CAAC,EAAE,EAAES,IAAI,CAAC;IACzB,OAAOA,IAAI;EACb,CAAC,EACD;IACEC,UAAU,EAAE9B;EACd,CACF,CAAC;AACH;AAEA,IAAI+B,cAAc,GAAG5B,qBAAqB,CAAC6B,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AAC5DD,cAAc,CAAC3B,MAAM,GAAGD,qBAAqB,CAAC6B,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AAE9DC,MAAM,CAACC,OAAO,GAAGH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
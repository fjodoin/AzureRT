{"ast":null,"code":"import { NodeProgram } from \"sigma/rendering\";\nimport { floatColor } from \"sigma/utils\";\nimport FRAGMENT_SHADER_SOURCE from \"./node-gradient-frag.glsl.ts\";\nimport VERTEX_SHADER_SOURCE from \"./node-gradient-vert.glsl.ts\";\nconst {\n  UNSIGNED_BYTE,\n  FLOAT\n} = WebGLRenderingContext;\nconst UNIFORMS = [\"u_sizeRatio\", \"u_pixelRatio\", \"u_matrix\"];\nexport default class NodeGradientProgram extends NodeProgram {\n  getDefinition() {\n    return {\n      VERTICES: 1,\n      VERTEX_SHADER_SOURCE,\n      FRAGMENT_SHADER_SOURCE,\n      METHOD: WebGLRenderingContext.POINTS,\n      UNIFORMS,\n      ATTRIBUTES: [{\n        name: \"a_position\",\n        size: 2,\n        type: FLOAT\n      }, {\n        name: \"a_size\",\n        size: 1,\n        type: FLOAT\n      }, {\n        name: \"a_color\",\n        size: 4,\n        type: UNSIGNED_BYTE,\n        normalized: true\n      }, {\n        name: \"a_id\",\n        size: 4,\n        type: UNSIGNED_BYTE,\n        normalized: true\n      }]\n    };\n  }\n  processVisibleItem(nodeIndex, startIndex, data) {\n    const array = this.array;\n    array[startIndex++] = data.x;\n    array[startIndex++] = data.y;\n    array[startIndex++] = data.size;\n    array[startIndex++] = floatColor(data.color);\n    array[startIndex++] = nodeIndex;\n  }\n  setUniforms(params, {\n    gl,\n    uniformLocations\n  }) {\n    const {\n      u_sizeRatio,\n      u_pixelRatio,\n      u_matrix\n    } = uniformLocations;\n    gl.uniform1f(u_sizeRatio, params.sizeRatio);\n    gl.uniform1f(u_pixelRatio, params.pixelRatio);\n    gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n  }\n}","map":{"version":3,"names":["NodeProgram","floatColor","FRAGMENT_SHADER_SOURCE","VERTEX_SHADER_SOURCE","UNSIGNED_BYTE","FLOAT","WebGLRenderingContext","UNIFORMS","NodeGradientProgram","getDefinition","VERTICES","METHOD","POINTS","ATTRIBUTES","name","size","type","normalized","processVisibleItem","nodeIndex","startIndex","data","array","x","y","color","setUniforms","params","gl","uniformLocations","u_sizeRatio","u_pixelRatio","u_matrix","uniform1f","sizeRatio","pixelRatio","uniformMatrix3fv","matrix"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/node-gradient.ts"],"sourcesContent":["import { NodeProgram, ProgramInfo } from \"sigma/rendering\";\nimport { NodeDisplayData, RenderParams } from \"sigma/types\";\nimport { floatColor } from \"sigma/utils\";\n\nimport FRAGMENT_SHADER_SOURCE from \"./node-gradient-frag.glsl.ts\";\nimport VERTEX_SHADER_SOURCE from \"./node-gradient-vert.glsl.ts\";\n\nconst { UNSIGNED_BYTE, FLOAT } = WebGLRenderingContext;\n\nconst UNIFORMS = [\"u_sizeRatio\", \"u_pixelRatio\", \"u_matrix\"] as const;\n\nexport default class NodeGradientProgram extends NodeProgram<(typeof UNIFORMS)[number]> {\n  getDefinition() {\n    return {\n      VERTICES: 1,\n      VERTEX_SHADER_SOURCE,\n      FRAGMENT_SHADER_SOURCE,\n      METHOD: WebGLRenderingContext.POINTS,\n      UNIFORMS,\n      ATTRIBUTES: [\n        { name: \"a_position\", size: 2, type: FLOAT },\n        { name: \"a_size\", size: 1, type: FLOAT },\n        { name: \"a_color\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n        { name: \"a_id\", size: 4, type: UNSIGNED_BYTE, normalized: true },\n      ],\n    };\n  }\n\n  processVisibleItem(nodeIndex: number, startIndex: number, data: NodeDisplayData) {\n    const array = this.array;\n\n    array[startIndex++] = data.x;\n    array[startIndex++] = data.y;\n    array[startIndex++] = data.size;\n    array[startIndex++] = floatColor(data.color);\n    array[startIndex++] = nodeIndex;\n  }\n\n  setUniforms(params: RenderParams, { gl, uniformLocations }: ProgramInfo): void {\n    const { u_sizeRatio, u_pixelRatio, u_matrix } = uniformLocations;\n\n    gl.uniform1f(u_sizeRatio, params.sizeRatio);\n    gl.uniform1f(u_pixelRatio, params.pixelRatio);\n    gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n  }\n}"],"mappings":"AAAA,SAASA,WAAW,QAAqB,iBAAiB;AAE1D,SAASC,UAAU,QAAQ,aAAa;AAExC,OAAOC,sBAAsB,MAAM,8BAA8B;AACjE,OAAOC,oBAAoB,MAAM,8BAA8B;AAE/D,MAAM;EAAEC,aAAa;EAAEC;AAAM,CAAC,GAAGC,qBAAqB;AAEtD,MAAMC,QAAQ,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,UAAU,CAAU;AAErE,eAAe,MAAMC,mBAAmB,SAASR,WAAW,CAA4B;EACtFS,aAAaA,CAAA,EAAG;IACd,OAAO;MACLC,QAAQ,EAAE,CAAC;MACXP,oBAAoB;MACpBD,sBAAsB;MACtBS,MAAM,EAAEL,qBAAqB,CAACM,MAAM;MACpCL,QAAQ;MACRM,UAAU,EAAE,CACV;QAAEC,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAEX;MAAM,CAAC,EAC5C;QAAES,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAEX;MAAM,CAAC,EACxC;QAAES,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAEZ,aAAa;QAAEa,UAAU,EAAE;MAAK,CAAC,EACnE;QAAEH,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAEZ,aAAa;QAAEa,UAAU,EAAE;MAAK,CAAC;IAEpE,CAAC;EACH;EAEAC,kBAAkBA,CAACC,SAAiB,EAAEC,UAAkB,EAAEC,IAAqB,EAAE;IAC/E,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;IAExBA,KAAK,CAACF,UAAU,EAAE,CAAC,GAAGC,IAAI,CAACE,CAAC;IAC5BD,KAAK,CAACF,UAAU,EAAE,CAAC,GAAGC,IAAI,CAACG,CAAC;IAC5BF,KAAK,CAACF,UAAU,EAAE,CAAC,GAAGC,IAAI,CAACN,IAAI;IAC/BO,KAAK,CAACF,UAAU,EAAE,CAAC,GAAGnB,UAAU,CAACoB,IAAI,CAACI,KAAK,CAAC;IAC5CH,KAAK,CAACF,UAAU,EAAE,CAAC,GAAGD,SAAS;EACjC;EAEAO,WAAWA,CAACC,MAAoB,EAAE;IAAEC,EAAE;IAAEC;EAA8B,CAAC,EAAQ;IAC7E,MAAM;MAAEC,WAAW;MAAEC,YAAY;MAAEC;IAAS,CAAC,GAAGH,gBAAgB;IAEhED,EAAE,CAACK,SAAS,CAACH,WAAW,EAAEH,MAAM,CAACO,SAAS,CAAC;IAC3CN,EAAE,CAACK,SAAS,CAACF,YAAY,EAAEJ,MAAM,CAACQ,UAAU,CAAC;IAC7CP,EAAE,CAACQ,gBAAgB,CAACJ,QAAQ,EAAE,KAAK,EAAEL,MAAM,CAACU,MAAM,CAAC;EACrD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
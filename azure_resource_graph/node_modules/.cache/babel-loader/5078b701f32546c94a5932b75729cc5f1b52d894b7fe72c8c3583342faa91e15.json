{"ast":null,"code":"var _jsxFileName = \"/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { SigmaContainer, useSigma } from \"@react-sigma/core\";\nimport { MultiGraph } from \"graphology\";\nimport circularLayout from \"graphology-layout/circular\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = ({\n  graphData\n}) => {\n  _s();\n  const sigma = useSigma();\n  useEffect(() => {\n    if (!graphData || !sigma) return;\n    const graph = new MultiGraph();\n    const {\n      nodes,\n      edges\n    } = graphData;\n\n    // Add nodes and edges\n    nodes.forEach(node => {\n      graph.addNode(node.id, {\n        label: node.label || node.id,\n        size: 10,\n        color: node.color || \"#cccccc\"\n      });\n    });\n    edges.forEach(edge => {\n      graph.addEdge(edge.source, edge.target, {\n        label: edge.label || \"\",\n        color: edge.color || \"#aaaaaa\",\n        size: 2\n      });\n    });\n\n    // Apply circular layout for testing\n    circularLayout.assign(graph);\n    sigma.setGraph(graph);\n    sigma.refresh();\n    console.log(\"Nodes:\", graph.nodes());\n    console.log(\"Edges:\", graph.edges());\n  }, [graphData, sigma]);\n  return null;\n};\n_s(GraphComponent, \"49hMWeJ/1Zr+8c08Ed8iArCOSnU=\", false, function () {\n  return [useSigma];\n});\n_c = GraphComponent;\nconst GraphWrapper = ({\n  graphData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    },\n    children: graphData ? /*#__PURE__*/_jsxDEV(SigmaContainer, {\n      children: /*#__PURE__*/_jsxDEV(GraphComponent, {\n        graphData: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please upload a valid JSON file with nodes and edges.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GraphWrapper;\nexport default GraphWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphComponent\");\n$RefreshReg$(_c2, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","SigmaContainer","useSigma","MultiGraph","circularLayout","jsxDEV","_jsxDEV","GraphComponent","graphData","_s","sigma","graph","nodes","edges","forEach","node","addNode","id","label","size","color","edge","addEdge","source","target","assign","setGraph","refresh","console","log","_c","GraphWrapper","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { SigmaContainer, useSigma } from \"@react-sigma/core\";\nimport { MultiGraph } from \"graphology\";\nimport circularLayout from \"graphology-layout/circular\";\n\nconst GraphComponent = ({ graphData }) => {\n  const sigma = useSigma();\n\n  useEffect(() => {\n    if (!graphData || !sigma) return;\n\n    const graph = new MultiGraph();\n    const { nodes, edges } = graphData;\n\n    // Add nodes and edges\n    nodes.forEach((node) => {\n      graph.addNode(node.id, {\n        label: node.label || node.id,\n        size: 10,\n        color: node.color || \"#cccccc\",\n      });\n    });\n    edges.forEach((edge) => {\n      graph.addEdge(edge.source, edge.target, {\n        label: edge.label || \"\",\n        color: edge.color || \"#aaaaaa\",\n        size: 2,\n      });\n    });\n\n    // Apply circular layout for testing\n    circularLayout.assign(graph);\n\n    sigma.setGraph(graph);\n    sigma.refresh();\n\n    console.log(\"Nodes:\", graph.nodes());\n    console.log(\"Edges:\", graph.edges());\n  }, [graphData, sigma]);\n\n  return null;\n};\n\nconst GraphWrapper = ({ graphData }) => {\n  return (\n    <div style={{ width: \"100%\", height: \"500px\" }}>\n      {graphData ? (\n        <SigmaContainer>\n          <GraphComponent graphData={graphData} />\n        </SigmaContainer>\n      ) : (\n        <p>Please upload a valid JSON file with nodes and edges.</p>\n      )}\n    </div>\n  );\n};\n\nexport default GraphWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,QAAQ,QAAQ,mBAAmB;AAC5D,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,KAAK,GAAGR,QAAQ,CAAC,CAAC;EAExBF,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,SAAS,IAAI,CAACE,KAAK,EAAE;IAE1B,MAAMC,KAAK,GAAG,IAAIR,UAAU,CAAC,CAAC;IAC9B,MAAM;MAAES,KAAK;MAAEC;IAAM,CAAC,GAAGL,SAAS;;IAElC;IACAI,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAK;MACtBJ,KAAK,CAACK,OAAO,CAACD,IAAI,CAACE,EAAE,EAAE;QACrBC,KAAK,EAAEH,IAAI,CAACG,KAAK,IAAIH,IAAI,CAACE,EAAE;QAC5BE,IAAI,EAAE,EAAE;QACRC,KAAK,EAAEL,IAAI,CAACK,KAAK,IAAI;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;IACFP,KAAK,CAACC,OAAO,CAAEO,IAAI,IAAK;MACtBV,KAAK,CAACW,OAAO,CAACD,IAAI,CAACE,MAAM,EAAEF,IAAI,CAACG,MAAM,EAAE;QACtCN,KAAK,EAAEG,IAAI,CAACH,KAAK,IAAI,EAAE;QACvBE,KAAK,EAAEC,IAAI,CAACD,KAAK,IAAI,SAAS;QAC9BD,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAf,cAAc,CAACqB,MAAM,CAACd,KAAK,CAAC;IAE5BD,KAAK,CAACgB,QAAQ,CAACf,KAAK,CAAC;IACrBD,KAAK,CAACiB,OAAO,CAAC,CAAC;IAEfC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAElB,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC;IACpCgB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAElB,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;EACtC,CAAC,EAAE,CAACL,SAAS,EAAEE,KAAK,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CApCIF,cAAc;EAAA,QACJL,QAAQ;AAAA;AAAA4B,EAAA,GADlBvB,cAAc;AAsCpB,MAAMwB,YAAY,GAAGA,CAAC;EAAEvB;AAAU,CAAC,KAAK;EACtC,oBACEF,OAAA;IAAK0B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAC5C3B,SAAS,gBACRF,OAAA,CAACL,cAAc;MAAAkC,QAAA,eACb7B,OAAA,CAACC,cAAc;QAACC,SAAS,EAAEA;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAEjBjC,OAAA;MAAA6B,QAAA,EAAG;IAAqD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,GAAA,GAZIT,YAAY;AAclB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
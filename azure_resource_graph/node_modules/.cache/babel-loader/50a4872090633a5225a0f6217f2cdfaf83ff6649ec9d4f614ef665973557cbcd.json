{"ast":null,"code":"var _jsxFileName = \"/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { SigmaContainer } from \"@react-sigma/core\";\nimport Graph from \"graphology\";\nimport circularLayout from \"graphology-layout/circular\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphWrapper = () => {\n  _s();\n  // Create a new graph instance\n  const graph = new Graph();\n  useEffect(() => {\n    // Add nodes\n    graph.addNode(\"1\", {\n      label: \"Node 1\",\n      size: 10,\n      color: \"blue\"\n    });\n    graph.addNode(\"2\", {\n      label: \"Node 2\",\n      size: 20,\n      color: \"red\"\n    });\n    graph.addNode(\"3\", {\n      label: \"Node 3\",\n      size: 30,\n      color: \"green\"\n    });\n\n    // Add edges\n    graph.addEdge(\"1\", \"2\", {\n      label: \"Edge 1-2\",\n      color: \"gray\"\n    });\n    graph.addEdge(\"2\", \"3\", {\n      label: \"Edge 2-3\",\n      color: \"gray\"\n    });\n\n    // Apply layout\n    circularLayout.assign(graph);\n  }, [graph]);\n  return /*#__PURE__*/_jsxDEV(SigmaContainer, {\n    style: {\n      height: \"80vh\",\n      width: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphWrapper, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GraphWrapper;\nexport default GraphWrapper;\nvar _c;\n$RefreshReg$(_c, \"GraphWrapper\");","map":{"version":3,"names":["React","useEffect","SigmaContainer","Graph","circularLayout","jsxDEV","_jsxDEV","GraphWrapper","_s","graph","addNode","label","size","color","addEdge","assign","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fjodoin/Desktop/Research/AzureRT/azure_resource_graph/training/graphing/sigma-graph/src/GraphWrapper.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { SigmaContainer } from \"@react-sigma/core\";\nimport Graph from \"graphology\";\nimport circularLayout from \"graphology-layout/circular\";\n\nconst GraphWrapper = () => {\n  // Create a new graph instance\n  const graph = new Graph();\n\n  useEffect(() => {\n    // Add nodes\n    graph.addNode(\"1\", { label: \"Node 1\", size: 10, color: \"blue\" });\n    graph.addNode(\"2\", { label: \"Node 2\", size: 20, color: \"red\" });\n    graph.addNode(\"3\", { label: \"Node 3\", size: 30, color: \"green\" });\n\n    // Add edges\n    graph.addEdge(\"1\", \"2\", { label: \"Edge 1-2\", color: \"gray\" });\n    graph.addEdge(\"2\", \"3\", { label: \"Edge 2-3\", color: \"gray\" });\n\n    // Apply layout\n    circularLayout.assign(graph);\n  }, [graph]);\n\n  return (\n    <SigmaContainer style={{ height: \"80vh\", width: \"100%\" }}>\n      {/* Graph automatically loaded by SigmaContainer */}\n    </SigmaContainer>\n  );\n};\n\nexport default GraphWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAMC,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;EAEzBF,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC;IAChEJ,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC;IAC/DJ,KAAK,CAACC,OAAO,CAAC,GAAG,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;;IAEjE;IACAJ,KAAK,CAACK,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;MAAEH,KAAK,EAAE,UAAU;MAAEE,KAAK,EAAE;IAAO,CAAC,CAAC;IAC7DJ,KAAK,CAACK,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;MAAEH,KAAK,EAAE,UAAU;MAAEE,KAAK,EAAE;IAAO,CAAC,CAAC;;IAE7D;IACAT,cAAc,CAACW,MAAM,CAACN,KAAK,CAAC;EAC9B,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA,CAACJ,cAAc;IAACc,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAErB,CAAC;AAACd,EAAA,CAvBID,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}